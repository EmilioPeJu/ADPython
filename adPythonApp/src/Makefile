TOP=../..

include $(TOP)/configure/CONFIG

# -------------------------------
# Build an Diamond Support Module
# -------------------------------

# This tells the compiler to ignore errors generated by EPICS includes.  We need
# this because the EPICS headers have non strict prototypes in places.
USR_CPPFLAGS += -isystem $(EPICS_BASE)/include

# Nice and strict...
USR_CXXFLAGS += -Werror
USR_CXXFLAGS += -Wall -Wextra
USR_CXXFLAGS += -Wno-unused-parameter
USR_CXXFLAGS += -Wno-missing-field-initializers
USR_CXXFLAGS += -Wundef
USR_CXXFLAGS += -Wshadow
USR_CXXFLAGS += -Wcast-align
USR_CXXFLAGS += -Wwrite-strings
USR_CXXFLAGS += -Wredundant-decls
USR_CXXFLAGS += -Wmissing-declarations
USR_CXXFLAGS += -Wcast-qual

LIBRARY_IOC += adPython

# xxxRecord.dbd will be installed into <top>/dbd
DBD += adPythonPlugin.dbd

# The following are compiled and added to the support library
adPython_SRCS += adPythonPlugin.cpp

# Guess the python executable
ifneq ($(PYTHON_PREFIX),)
    PYTHON = $(PYTHON_PREFIX)/bin/python
else
    PYTHON = python
endif

# Get the version string of python
PYTHON_VERSION = $(shell $(PYTHON) -c 'from distutils import sysconfig; \
    print sysconfig.get_config_var("VERSION")')

# link against python
ifneq ($(PYTHON_PREFIX),)
	USR_INCLUDES += -I$(PYTHON_PREFIX)/include/python$(PYTHON_VERSION)
	python$(PYTHON_VERSION)_DIR = $(PYTHON_PREFIX)/lib
	adPython_LIBS += python$(PYTHON_VERSION)
else
	adPython_SYS_LIBS += python$(PYTHON_VERSION)
endif

USR_CXXFLAGS += -DDATADIR=\"$(shell cd ..; pwd)\"

include $(TOP)/configure/RULES
