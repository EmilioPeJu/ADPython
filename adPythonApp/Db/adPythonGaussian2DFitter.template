# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout
# % macro, ADDR, Asyn Port address
# % gui, $(PORT), edmtab, adPythonGaussian2DFitter.edl, P=$(P),R=$(R)

record(longin, "$(P)$(R)FitWindowSize_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FitWindowSize")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)FitWindowSize") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FitWindowSize")
}

record(longin, "$(P)$(R)FitThinning_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FitThinning")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)FitThinning") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FitThinning")
}


record(longin, "$(P)$(R)Maxiter_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Maxiter")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)Maxiter") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Maxiter")
}


record(longin, "$(P)$(R)PeakHeight_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PeakHeight")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)OriginX_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OriginX")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)OriginY_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OriginY")
    field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)Baseline_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Baseline")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)SigmaX_RBV") {
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SigmaX")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
}

record(ai, "$(P)$(R)SigmaY_RBV") {
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SigmaY")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
}

record(ai, "$(P)$(R)Angle_RBV") {
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Angle")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
}

record(ai, "$(P)$(R)Error_RBV") {
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Error")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
}

record(stringin, "$(P)$(R)FitStatus_RBV") {
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FitStatus")
    field(SCAN, "I/O Intr")
}
